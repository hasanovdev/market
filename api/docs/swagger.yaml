definitions:
  http.ErrorResp:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  models.Branch:
    properties:
      address:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      phone_number:
        type: string
      updated_at:
        type: string
    type: object
  models.CategoryResp:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      parent_name:
        type: string
      updated_at:
        type: string
    type: object
  models.ComingTableProductResp:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      category_name:
        type: string
      coming_table_id:
        type: string
      count:
        type: number
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  models.ComingTableResp:
    properties:
      branch_id:
        type: string
      branch_name:
        type: string
      coming_id:
        type: string
      created_at:
        type: string
      date_time:
        type: string
      id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  models.CreateBranch:
    properties:
      address:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  models.CreateCategory:
    properties:
      name:
        type: string
      parent_id:
        type: string
    type: object
  models.CreateComingTable:
    properties:
      branch_id:
        type: string
      date_time:
        type: string
    type: object
  models.CreateComingTableProduct:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      coming_table_id:
        type: string
      count:
        type: number
      name:
        type: string
      price:
        type: number
    type: object
  models.CreateProduct:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.CreateRemaining:
    properties:
      barcode:
        type: string
      branch_id:
        type: string
      category_id:
        type: string
      count:
        type: number
      name:
        type: string
      price:
        type: number
    type: object
  models.ProductResp:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      category_name:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
  models.RemainingResp:
    properties:
      barcode:
        type: string
      branch_id:
        type: string
      branch_name:
        type: string
      category_id:
        type: string
      category_name:
        type: string
      count:
        type: number
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      total_price:
        type: number
      updated_at:
        type: string
    type: object
  models.UpdateBranch:
    properties:
      address:
        type: string
      name:
        type: string
      phone_number:
        type: string
    type: object
  models.UpdateCategory:
    properties:
      name:
        type: string
      parent_id:
        type: string
    type: object
  models.UpdateComingTable:
    properties:
      branch_id:
        type: string
      date_time:
        type: string
      id:
        type: string
      status:
        type: string
    type: object
  models.UpdateComingTableProduct:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      coming_table_id:
        type: string
      count:
        type: number
      name:
        type: string
      price:
        type: number
    type: object
  models.UpdateProduct:
    properties:
      barcode:
        type: string
      category_id:
        type: string
      name:
        type: string
      price:
        type: number
    type: object
  models.UpdateRemaining:
    properties:
      barcode:
        type: string
      branch_id:
        type: string
      category_id:
        type: string
      count:
        type: number
      name:
        type: string
      price:
        type: number
    type: object
info:
  contact: {}
paths:
  /branches:
    get:
      consumes:
      - application/json
      description: get branches
      parameters:
      - description: limit for response
        in: query
        name: limit
        type: integer
      - description: page for response
        in: query
        name: page
        type: integer
      - description: search by name
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Branch'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: List branches
      tags:
      - branches
    post:
      consumes:
      - application/json
      description: Create a new branch with the provided details
      parameters:
      - description: data of the branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.CreateBranch'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Create a new branch
      tags:
      - branches
  /branches/{id}:
    delete:
      consumes:
      - application/json
      description: delete a branch by its unique identifier
      parameters:
      - description: Branch ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Delete a branch
      tags:
      - branches
    get:
      consumes:
      - application/json
      description: Retrieve a branch by its unique identifier
      parameters:
      - description: Branch ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Branch'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Get a branch by ID
      tags:
      - branches
    put:
      consumes:
      - application/json
      description: Update an existing branch with the provided details
      parameters:
      - description: Branch ID to update
        in: path
        name: id
        required: true
        type: string
      - description: Updated data for the branch
        in: body
        name: branch
        required: true
        schema:
          $ref: '#/definitions/models.UpdateBranch'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Update an existing branch
      tags:
      - branches
  /categories:
    get:
      consumes:
      - application/json
      description: get categories
      parameters:
      - description: limit for response
        in: query
        name: limit
        type: integer
      - description: page for response
        in: query
        name: page
        type: integer
      - description: search by name
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.CategoryResp'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: List categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      description: Create a new category with the provided details
      parameters:
      - description: data of the category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.CreateCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Create a new category
      tags:
      - categories
  /categories/{id}:
    delete:
      consumes:
      - application/json
      description: delete a category by its unique identifier
      parameters:
      - description: Category ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Delete a category
      tags:
      - categories
    get:
      consumes:
      - application/json
      description: Retrieve a category by its unique identifier
      parameters:
      - description: Category ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CategoryResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Get a category by ID
      tags:
      - categories
    put:
      consumes:
      - application/json
      description: Update an existing category with the provided details
      parameters:
      - description: Category ID to update
        in: path
        name: id
        required: true
        type: string
      - description: Update data for the category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/models.UpdateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Update an existing category
      tags:
      - categories
  /coming_table_products:
    get:
      consumes:
      - application/json
      description: get coming_table_products
      parameters:
      - description: limit for response
        in: query
        name: limit
        type: integer
      - description: page for response
        in: query
        name: page
        type: integer
      - description: category_id for response
        in: query
        name: category_id
        type: string
      - description: barcode for response
        in: query
        name: barcode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ComingTableProductResp'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: List coming_table_products
      tags:
      - coming_table_products
    post:
      consumes:
      - application/json
      description: Create a new coming_table_product with the provided details
      parameters:
      - description: data of the coming table product
        in: body
        name: coming_table_product
        required: true
        schema:
          $ref: '#/definitions/models.CreateComingTableProduct'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Create a new coming_table_product
      tags:
      - coming_table_products
  /coming_table_products/{id}:
    delete:
      consumes:
      - application/json
      description: delete a coming_table_product by its unique identifier
      parameters:
      - description: Coming table product ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Delete a coming_table_product
      tags:
      - coming_table_products
    get:
      consumes:
      - application/json
      description: Retrieve a coming_table_product by its unique identifier
      parameters:
      - description: Coming table product ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComingTableProductResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Get a oming_table_product by ID
      tags:
      - coming_table_products
    put:
      consumes:
      - application/json
      description: Update an existing coming_table_product with the provided details
      parameters:
      - description: Coming table product ID to update
        in: path
        name: id
        required: true
        type: string
      - description: Update data for the coming table product
        in: body
        name: coming_table
        required: true
        schema:
          $ref: '#/definitions/models.UpdateComingTableProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Update an existing coming_table_product
      tags:
      - coming_table_products
  /coming_tables:
    get:
      consumes:
      - application/json
      description: get coming_tables
      parameters:
      - description: limit for response
        in: query
        name: limit
        type: integer
      - description: page for response
        in: query
        name: page
        type: integer
      - description: branch_id for response
        in: query
        name: branch_id
        type: string
      - description: coming_id for response
        in: query
        name: coming_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ComingTableResp'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: List coming_tables
      tags:
      - coming_tables
    post:
      consumes:
      - application/json
      description: Create a new coming_table with the provided details
      parameters:
      - description: data of the coming table
        in: body
        name: coming_table
        required: true
        schema:
          $ref: '#/definitions/models.CreateComingTable'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Create a new coming_table
      tags:
      - coming_tables
  /coming_tables/{id}:
    delete:
      consumes:
      - application/json
      description: delete a coming_table by its unique identifier
      parameters:
      - description: Coming table ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Delete a coming_table
      tags:
      - coming_tables
    get:
      consumes:
      - application/json
      description: Retrieve a coming_table by its unique identifier
      parameters:
      - description: Coming table ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ComingTableResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Get a coming_table by ID
      tags:
      - coming_tables
    put:
      consumes:
      - application/json
      description: Update an existing coming_table with the provided details
      parameters:
      - description: Coming table ID to update
        in: path
        name: id
        required: true
        type: string
      - description: Update data for the coming table
        in: body
        name: coming_table
        required: true
        schema:
          $ref: '#/definitions/models.UpdateComingTable'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Update an existing coming_table
      tags:
      - coming_tables
  /coming_tables/do-income/{coming_table_id}:
    get:
      consumes:
      - application/json
      description: Do Income Coming table to Remainings
      parameters:
      - description: Coming table ID to retrieve
        in: path
        name: coming_table_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Do Income Coming table to Remainings
      tags:
      - coming_tables
  /coming_tables/scan-barcode/{coming_table_id}:
    get:
      consumes:
      - application/json
      description: Scan barcode and create or update coming table products
      parameters:
      - description: Coming table ID to retrieve
        in: path
        name: coming_table_id
        required: true
        type: string
      - description: Product barcode to retrieve
        in: query
        name: barcode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Scan barcode product
      tags:
      - coming_tables
  /products:
    get:
      consumes:
      - application/json
      description: get products
      parameters:
      - description: limit for response
        in: query
        name: limit
        type: integer
      - description: page for response
        in: query
        name: page
        type: integer
      - description: search by name
        in: query
        name: search
        type: string
      - description: search by barcode
        in: query
        name: barcode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProductResp'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: List products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a new product with the provided details
      parameters:
      - description: data of the product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.CreateProduct'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Create a new product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: delete a product by its unique identifier
      parameters:
      - description: Product ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Retrieve a product by its unique identifier
      parameters:
      - description: Product ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ProductResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update an existing product with the provided details
      parameters:
      - description: Product ID to update
        in: path
        name: id
        required: true
        type: string
      - description: Update data for the product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.UpdateProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Update an existing product
      tags:
      - products
  /remainings:
    get:
      consumes:
      - application/json
      description: get remainings
      parameters:
      - description: limit for response
        in: query
        name: limit
        type: integer
      - description: page for response
        in: query
        name: page
        type: integer
      - description: search by branch_id
        in: query
        name: branch_id
        type: string
      - description: search by category_id
        in: query
        name: category_id
        type: string
      - description: search by barcode
        in: query
        name: barcode
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.RemainingResp'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: List remainings
      tags:
      - remainings
    post:
      consumes:
      - application/json
      description: Create a new remaining with the provided details
      parameters:
      - description: data of the remaining product
        in: body
        name: remaining
        required: true
        schema:
          $ref: '#/definitions/models.CreateRemaining'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Create a new remaining
      tags:
      - remainings
  /remainings/{id}:
    delete:
      consumes:
      - application/json
      description: delete a remaining by its unique identifier
      parameters:
      - description: Remaining ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Delete a remaining
      tags:
      - remainings
    get:
      consumes:
      - application/json
      description: Retrieve a reamining by its unique identifier
      parameters:
      - description: Remaining ID to retrieve
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RemainingResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Get a reamining by ID
      tags:
      - remainings
    put:
      consumes:
      - application/json
      description: Update an existing remaining with the provided details
      parameters:
      - description: Remaining ID to update
        in: path
        name: id
        required: true
        type: string
      - description: Update data for the remaining product
        in: body
        name: remaining
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRemaining'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/http.ErrorResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/http.ErrorResp'
      summary: Update an existing remaining
      tags:
      - remainings
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
